:javascript
  $(document).ready( function () {
    var info = #{@info.to_json};
    info.create_pass_url = "#{create_pass_url(:game_id=>@game.id)}";
    info.move_info_url = "#{move_info_url(:game_id=>@game.id)}";
    info.plays_url = "#{plays_url(:game_id=>@game.id)}";
    info.board_image_paths_url = "#{url_for(:controller => :board, :action => :image_paths)}";
    info.create_move_f = function (position) { 
      return '#{create_move_url(:game_id=>@game.id, :position=>'zzzzz')}'.replace('zzzzz', position);
    }
    info.get_updates_f = function (current_move_number) { 
      return '#{get_updates_url(:game_id=>@game.id, :after_play=>'zzzzz', :layout=>'false')}'.replace('zzzzz', current_move_number);
    }
    info.get_history_f = function (current_move_number) { 
      return '#{get_history_url(:game_id=>@game.id, :before_play=>'zzzzz', :layout=>'false')}'.replace('zzzzz', current_move_number);
    }
    var game_show_helper = GO.game_show_helper(info);
    game_show_helper.update_active_on_current_board();
    game_show_helper.update_move_infos();
    game_show_helper.get_history_up_to(#{@game.current_move_number})
    $('#m0').data('number',0);
    $('#m#{@game.current_move_number}').data('number',#{@game.current_move_number});
    game_show_helper.document_ready_hook();
    $(document).data('game_show_helper', game_show_helper);
  });
-if @game.current_move_number == 0
  .current.move#m0
    .toolbar 
      %h1 Initial Position
    .board
      = render :partial => "board/board", :locals => { :game => @game, :latest => nil }
    .info
      %span.desc
      %span.history
      %span.news
-else
  .move#m0
    .toolbar 
      %h1 Initial Position
    .board
      = render :partial => "board/board", :locals => { :board => @game.initial_board, :latest => nil }
    .info
      %span.desc
      %span.history
      %span.news
  .current.move{:id=>"m#{@game.current_move_number}"}
    - action = @game.actions.last # TODO: denormalize like everything else
    .toolbar 
      %h1
    .board
      = render :partial => "board/board", :locals => { :game => @game, :latest => action.position }
    .info
      %span.desc
      %span.history
        -if action.kind_of?(Action::Pass)
          #{action.player.titleize} passed.
        -elsif !action.position.blank?
          #{!action.removed.empty? ? (' ' + action.player.titleize + ' captured ' + pluralize(action.removed.size, 'stone.')) : ''}
      %span.news