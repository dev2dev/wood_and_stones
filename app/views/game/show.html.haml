- black_gravatar_url = gravatar_url(@game.black.email, :size=>20, :default=>'monsterid')
- white_gravatar_url = gravatar_url(@game.white.email, :size=>20, :default=>'monsterid')
%style{:type=>"text/css", :media=>"screen"}
:javascript
  $(document).ready( function () {
    var info = #{@info.to_json};
    info.create_pass_url = "#{create_pass_url(:game_id=>@game.id)}";
    info.move_info_url = "#{move_info_url(:game_id=>@game.id)}";
    info.plays_url = "#{plays_url(:game_id=>@game.id)}";
    info.board_image_paths_url = "#{url_for(:controller => :board, :action => :image_paths)}";
    info.create_move_f = function (position) { 
      return '#{create_move_url(:game_id=>@game.id, :position=>'zzzzz')}'.replace('zzzzz', position);
    }
    info.get_updates_f = function (current_move_number) { 
      return '#{get_updates_url(:game_id=>@game.id, :after_play=>'zzzzz', :layout=>'false')}'.replace('zzzzz', current_move_number);
    }
    info.get_history_f = function (current_move_number) { 
      return '#{get_history_url(:game_id=>@game.id, :before_play=>'zzzzz', :layout=>'false')}'.replace('zzzzz', current_move_number);
    }
    info.black_gravatar_url = "#{black_gravatar_url}";
    info.white_gravatar_url = "#{white_gravatar_url}";
    var game_show_helper = GO.game_show_helper(info);
    game_show_helper.get_history_up_to(#{@game.current_move_number})
    $('#m0').data('number',0);
    $('#m#{@game.current_move_number}').data('number',#{@game.current_move_number});
    game_show_helper.document_ready_hook();
    $(document).data('game_show_helper', game_show_helper);
  });
#info
  = render :partial => 'action/gameplay/toolbar', :locals => { :back => false, :hey => false }
  %h2 Players
  %ul.rounded
    %li
      %img{ :src => black_gravatar_url }
      -if @info[:playing] == Board::BLACK_S
        You are playing black
      -else
        Black
    %li
      %img{ :src => white_gravatar_url }
      -if @info[:playing] == Board::WHITE_S
        You are playing white
      -else
        White
  %h2 Game State
  %ul.rounded
    %li
      -if @game.state == 'started'
        New
      -elsif @game.state == 'moved'
        In progress
      -elsif @game.state == 'passed'
        In progress
      -elsif @game.state == 'ended'
        Ended
  %h2 Captured Stones
  %ul.rounded
    %li
      #{@info[:playing] == Board::BLACK_S ? 'you have captured' : "black has captured"}
      %span.captured_whites= @game.captured_whites
      stones
    %li
      #{@info[:playing] == Board::WHITE_S ? 'you have captured' : "white has captured"}
      %span.captured_blacks= @game.captured_blacks
      stones
-if @game.current_move_number == 0
  .current.move#m0
    = render :partial => 'action/gameplay/toolbar', :locals => { :playing_text => 'Initial Position' }
    .board
      .dragger
        = render :partial => "board/board", :locals => { :game => @game, :latest => nil }
-else
  .move#m0
    = render :partial => 'action/gameplay/toolbar', :locals => { :playing_text => 'Initial Position' }
    .board
      .dragger
        = render :partial => "board/board", :locals => { :board => @game.initial_board, :latest => nil }
  = render :partial => 'action/gameplay/action', :locals => { :action => @game.actions.last, :current => true }