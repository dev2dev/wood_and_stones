class GameNotifier < ActionMailer::Base
  
  # name each method after the class of target it represents
  
  def game(game)
    return if game.last_action_updated_i.nil?
    unless game.last_black_notification.andand >= game.last_action_updated_i
      mail_to(game, game.black)
      game.update_attribute(:last_black_notification, game.last_action_updated_i)
    end
    unless game.last_white_notification.andand >= game.last_action_updated_i
      mail_to(game, game.white)
      game.update_attribute(:last_black_notification, game.last_action_updated_i)
    end
  end
  
  private 
  
  def mail_to(game, user)
    Rails.logger.info "***** mailing an update about Game #{game.id} to #{user.email}"
    secret = Secret.first(:conditions => {:target_id => game.id, :target_type => game.class.name, :user_id => user.id})
    if game.black == user
      opponents_email = game.white.email
    elsif game.white == secret.user
      opponents_email = game.black.email
    else
      raise "mailing an update to someone we don't recognize"
    end
    recipients user.email
    from       "go@raganwald.com"
    subject    "There has been an update"
    body       :secret => secret.secret, :opponent_email => opponents_email
  end

end