module Action::PlaceStone
  
  def self.included(receiver)
    
    receiver.instance_eval do |foo|
      # these affect validation
      before_validation_on_create :place_stone
        
      validates_presence_of(:position, :on => :create, :message => "can't be blank")
        
      # a valid placement is not exactly the same thing as a valid move
      # validation occurs after the creation of before and after
      validates_each :position do |record, attr, value|
        if record.game.current_board
          record.errors.add attr, 'should be of the form aa and be a valid position on the board' unless begin
            record.game.current_board.valid_position?(value)
          end
          record.errors.add attr, 'should be to an empty place on the board' unless begin
            record.game.current_board[value].open?
          end
        end
      end
        
      validates_each :after do |record, attr, value|
        if record.after
          record.errors.add attr, 'should result in a stone placed on the board' unless begin
            value[record.position].has?(record.player)
          end
        end
      end
  
    end
    
  end
  
  def place_stone
    if self.after? && self.after[self.position].open?
      self.after += (self.player == 'black' ? Board::Black.new(position) : Board::White.new(position))
    end
  end
  
end